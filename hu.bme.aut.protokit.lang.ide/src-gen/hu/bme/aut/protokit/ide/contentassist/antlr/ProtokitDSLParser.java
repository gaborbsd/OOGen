/*
 * generated by Xtext 2.10.0
 */
package hu.bme.aut.protokit.ide.contentassist.antlr;

import com.google.inject.Inject;
import hu.bme.aut.protokit.ide.contentassist.antlr.internal.InternalProtokitDSLParser;
import hu.bme.aut.protokit.services.ProtokitDSLGrammarAccess;
import java.util.Collection;
import java.util.HashMap;
import java.util.Map;
import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

public class ProtokitDSLParser extends AbstractContentAssistParser {

	@Inject
	private ProtokitDSLGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalProtokitDSLParser createParser() {
		InternalProtokitDSLParser result = new InternalProtokitDSLParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getDataTypeAccess().getAlternatives_0(), "rule__DataType__Alternatives_0");
					put(grammarAccess.getVariableDefinitionAccess().getAlternatives(), "rule__VariableDefinition__Alternatives");
					put(grammarAccess.getStringFieldAccess().getAlternatives_5(), "rule__StringField__Alternatives_5");
					put(grammarAccess.getBinaryFieldAccess().getAlternatives_5(), "rule__BinaryField__Alternatives_5");
					put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
					put(grammarAccess.getDataTypeAccess().getGroup(), "rule__DataType__Group__0");
					put(grammarAccess.getIntegerFieldAccess().getGroup(), "rule__IntegerField__Group__0");
					put(grammarAccess.getIntegerFieldAccess().getGroup_5(), "rule__IntegerField__Group_5__0");
					put(grammarAccess.getStringFieldAccess().getGroup(), "rule__StringField__Group__0");
					put(grammarAccess.getStringFieldAccess().getGroup_5_0(), "rule__StringField__Group_5_0__0");
					put(grammarAccess.getStringFieldAccess().getGroup_5_1(), "rule__StringField__Group_5_1__0");
					put(grammarAccess.getBinaryFieldAccess().getGroup(), "rule__BinaryField__Group__0");
					put(grammarAccess.getBinaryFieldAccess().getGroup_5_0(), "rule__BinaryField__Group_5_0__0");
					put(grammarAccess.getBinaryFieldAccess().getGroup_5_1(), "rule__BinaryField__Group_5_1__0");
					put(grammarAccess.getBitFieldAccess().getGroup(), "rule__BitField__Group__0");
					put(grammarAccess.getBitfieldComponentAccess().getGroup(), "rule__BitfieldComponent__Group__0");
					put(grammarAccess.getListFieldAccess().getGroup(), "rule__ListField__Group__0");
					put(grammarAccess.getLengthFieldAccess().getGroup(), "rule__LengthField__Group__0");
					put(grammarAccess.getCountFieldAccess().getGroup(), "rule__CountField__Group__0");
					put(grammarAccess.getDataTypeFieldAccess().getGroup(), "rule__DataTypeField__Group__0");
					put(grammarAccess.getFormatterAccess().getGroup(), "rule__Formatter__Group__0");
					put(grammarAccess.getProtocolModelAccess().getDatatypesAssignment(), "rule__ProtocolModel__DatatypesAssignment");
					put(grammarAccess.getDataTypeAccess().getNameAssignment_1(), "rule__DataType__NameAssignment_1");
					put(grammarAccess.getDataTypeAccess().getFieldsAssignment_3(), "rule__DataType__FieldsAssignment_3");
					put(grammarAccess.getIntegerFieldAccess().getTransientFieldAssignment_0(), "rule__IntegerField__TransientFieldAssignment_0");
					put(grammarAccess.getIntegerFieldAccess().getIdentityFieldAssignment_1(), "rule__IntegerField__IdentityFieldAssignment_1");
					put(grammarAccess.getIntegerFieldAccess().getNameAssignment_2(), "rule__IntegerField__NameAssignment_2");
					put(grammarAccess.getIntegerFieldAccess().getByteLenAssignment_5_1(), "rule__IntegerField__ByteLenAssignment_5_1");
					put(grammarAccess.getStringFieldAccess().getTransientFieldAssignment_0(), "rule__StringField__TransientFieldAssignment_0");
					put(grammarAccess.getStringFieldAccess().getIdentityFieldAssignment_1(), "rule__StringField__IdentityFieldAssignment_1");
					put(grammarAccess.getStringFieldAccess().getNameAssignment_2(), "rule__StringField__NameAssignment_2");
					put(grammarAccess.getStringFieldAccess().getByteLenAssignment_5_0_1(), "rule__StringField__ByteLenAssignment_5_0_1");
					put(grammarAccess.getStringFieldAccess().getUnboundedAssignment_5_1_1(), "rule__StringField__UnboundedAssignment_5_1_1");
					put(grammarAccess.getStringFieldAccess().getFormatterAssignment_5_1_3(), "rule__StringField__FormatterAssignment_5_1_3");
					put(grammarAccess.getBinaryFieldAccess().getTransientFieldAssignment_0(), "rule__BinaryField__TransientFieldAssignment_0");
					put(grammarAccess.getBinaryFieldAccess().getIdentityFieldAssignment_1(), "rule__BinaryField__IdentityFieldAssignment_1");
					put(grammarAccess.getBinaryFieldAccess().getNameAssignment_2(), "rule__BinaryField__NameAssignment_2");
					put(grammarAccess.getBinaryFieldAccess().getByteLenAssignment_5_0_1(), "rule__BinaryField__ByteLenAssignment_5_0_1");
					put(grammarAccess.getBinaryFieldAccess().getUnboundedAssignment_5_1_1(), "rule__BinaryField__UnboundedAssignment_5_1_1");
					put(grammarAccess.getBitFieldAccess().getTransientFieldAssignment_0(), "rule__BitField__TransientFieldAssignment_0");
					put(grammarAccess.getBitFieldAccess().getIdentityFieldAssignment_1(), "rule__BitField__IdentityFieldAssignment_1");
					put(grammarAccess.getBitFieldAccess().getNameAssignment_2(), "rule__BitField__NameAssignment_2");
					put(grammarAccess.getBitFieldAccess().getComponentsAssignment_6(), "rule__BitField__ComponentsAssignment_6");
					put(grammarAccess.getBitfieldComponentAccess().getNameAssignment_0(), "rule__BitfieldComponent__NameAssignment_0");
					put(grammarAccess.getBitfieldComponentAccess().getBitLenAssignment_2(), "rule__BitfieldComponent__BitLenAssignment_2");
					put(grammarAccess.getListFieldAccess().getTransientFieldAssignment_0(), "rule__ListField__TransientFieldAssignment_0");
					put(grammarAccess.getListFieldAccess().getIdentityFieldAssignment_1(), "rule__ListField__IdentityFieldAssignment_1");
					put(grammarAccess.getListFieldAccess().getNameAssignment_2(), "rule__ListField__NameAssignment_2");
					put(grammarAccess.getListFieldAccess().getElementTypeAssignment_6(), "rule__ListField__ElementTypeAssignment_6");
					put(grammarAccess.getLengthFieldAccess().getTransientFieldAssignment_0(), "rule__LengthField__TransientFieldAssignment_0");
					put(grammarAccess.getLengthFieldAccess().getIdentityFieldAssignment_1(), "rule__LengthField__IdentityFieldAssignment_1");
					put(grammarAccess.getLengthFieldAccess().getNameAssignment_2(), "rule__LengthField__NameAssignment_2");
					put(grammarAccess.getLengthFieldAccess().getByteLenAssignment_6(), "rule__LengthField__ByteLenAssignment_6");
					put(grammarAccess.getLengthFieldAccess().getRefAssignment_8(), "rule__LengthField__RefAssignment_8");
					put(grammarAccess.getCountFieldAccess().getTransientFieldAssignment_0(), "rule__CountField__TransientFieldAssignment_0");
					put(grammarAccess.getCountFieldAccess().getIdentityFieldAssignment_1(), "rule__CountField__IdentityFieldAssignment_1");
					put(grammarAccess.getCountFieldAccess().getNameAssignment_2(), "rule__CountField__NameAssignment_2");
					put(grammarAccess.getCountFieldAccess().getByteLenAssignment_6(), "rule__CountField__ByteLenAssignment_6");
					put(grammarAccess.getCountFieldAccess().getRefAssignment_8(), "rule__CountField__RefAssignment_8");
					put(grammarAccess.getDataTypeFieldAccess().getTransientFieldAssignment_0(), "rule__DataTypeField__TransientFieldAssignment_0");
					put(grammarAccess.getDataTypeFieldAccess().getIdentityFieldAssignment_1(), "rule__DataTypeField__IdentityFieldAssignment_1");
					put(grammarAccess.getDataTypeFieldAccess().getNameAssignment_2(), "rule__DataTypeField__NameAssignment_2");
					put(grammarAccess.getDataTypeFieldAccess().getDatatypeAssignment_4(), "rule__DataTypeField__DatatypeAssignment_4");
					put(grammarAccess.getFormatterAccess().getNameAssignment_1(), "rule__Formatter__NameAssignment_1");
				}
			};
		}
		return nameMappings.get(element);
	}

	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			InternalProtokitDSLParser typedParser = (InternalProtokitDSLParser) parser;
			typedParser.entryRuleProtocolModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public ProtokitDSLGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(ProtokitDSLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
