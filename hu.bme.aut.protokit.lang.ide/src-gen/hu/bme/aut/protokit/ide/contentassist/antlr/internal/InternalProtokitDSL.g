/*
 * generated by Xtext 2.10.0
 */
grammar InternalProtokitDSL;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package hu.bme.aut.protokit.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package hu.bme.aut.protokit.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import hu.bme.aut.protokit.services.ProtokitDSLGrammarAccess;

}
@parser::members {
	private ProtokitDSLGrammarAccess grammarAccess;

	public void setGrammarAccess(ProtokitDSLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleProtocolModel
entryRuleProtocolModel
:
{ before(grammarAccess.getProtocolModelRule()); }
	 ruleProtocolModel
{ after(grammarAccess.getProtocolModelRule()); } 
	 EOF 
;

// Rule ProtocolModel
ruleProtocolModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		(
			{ before(grammarAccess.getProtocolModelAccess().getDatatypesAssignment()); }
			(rule__ProtocolModel__DatatypesAssignment)
			{ after(grammarAccess.getProtocolModelAccess().getDatatypesAssignment()); }
		)
		(
			{ before(grammarAccess.getProtocolModelAccess().getDatatypesAssignment()); }
			(rule__ProtocolModel__DatatypesAssignment)*
			{ after(grammarAccess.getProtocolModelAccess().getDatatypesAssignment()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDataType
entryRuleDataType
:
{ before(grammarAccess.getDataTypeRule()); }
	 ruleDataType
{ after(grammarAccess.getDataTypeRule()); } 
	 EOF 
;

// Rule DataType
ruleDataType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDataTypeAccess().getGroup()); }
		(rule__DataType__Group__0)
		{ after(grammarAccess.getDataTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableDefinition
entryRuleVariableDefinition
:
{ before(grammarAccess.getVariableDefinitionRule()); }
	 ruleVariableDefinition
{ after(grammarAccess.getVariableDefinitionRule()); } 
	 EOF 
;

// Rule VariableDefinition
ruleVariableDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableDefinitionAccess().getAlternatives()); }
		(rule__VariableDefinition__Alternatives)
		{ after(grammarAccess.getVariableDefinitionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIntegerField
entryRuleIntegerField
:
{ before(grammarAccess.getIntegerFieldRule()); }
	 ruleIntegerField
{ after(grammarAccess.getIntegerFieldRule()); } 
	 EOF 
;

// Rule IntegerField
ruleIntegerField 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntegerFieldAccess().getGroup()); }
		(rule__IntegerField__Group__0)
		{ after(grammarAccess.getIntegerFieldAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStringField
entryRuleStringField
:
{ before(grammarAccess.getStringFieldRule()); }
	 ruleStringField
{ after(grammarAccess.getStringFieldRule()); } 
	 EOF 
;

// Rule StringField
ruleStringField 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringFieldAccess().getGroup()); }
		(rule__StringField__Group__0)
		{ after(grammarAccess.getStringFieldAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBinaryField
entryRuleBinaryField
:
{ before(grammarAccess.getBinaryFieldRule()); }
	 ruleBinaryField
{ after(grammarAccess.getBinaryFieldRule()); } 
	 EOF 
;

// Rule BinaryField
ruleBinaryField 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBinaryFieldAccess().getGroup()); }
		(rule__BinaryField__Group__0)
		{ after(grammarAccess.getBinaryFieldAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBitField
entryRuleBitField
:
{ before(grammarAccess.getBitFieldRule()); }
	 ruleBitField
{ after(grammarAccess.getBitFieldRule()); } 
	 EOF 
;

// Rule BitField
ruleBitField 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBitFieldAccess().getGroup()); }
		(rule__BitField__Group__0)
		{ after(grammarAccess.getBitFieldAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBitfieldComponent
entryRuleBitfieldComponent
:
{ before(grammarAccess.getBitfieldComponentRule()); }
	 ruleBitfieldComponent
{ after(grammarAccess.getBitfieldComponentRule()); } 
	 EOF 
;

// Rule BitfieldComponent
ruleBitfieldComponent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBitfieldComponentAccess().getGroup()); }
		(rule__BitfieldComponent__Group__0)
		{ after(grammarAccess.getBitfieldComponentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleListField
entryRuleListField
:
{ before(grammarAccess.getListFieldRule()); }
	 ruleListField
{ after(grammarAccess.getListFieldRule()); } 
	 EOF 
;

// Rule ListField
ruleListField 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getListFieldAccess().getGroup()); }
		(rule__ListField__Group__0)
		{ after(grammarAccess.getListFieldAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLengthField
entryRuleLengthField
:
{ before(grammarAccess.getLengthFieldRule()); }
	 ruleLengthField
{ after(grammarAccess.getLengthFieldRule()); } 
	 EOF 
;

// Rule LengthField
ruleLengthField 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLengthFieldAccess().getGroup()); }
		(rule__LengthField__Group__0)
		{ after(grammarAccess.getLengthFieldAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCountField
entryRuleCountField
:
{ before(grammarAccess.getCountFieldRule()); }
	 ruleCountField
{ after(grammarAccess.getCountFieldRule()); } 
	 EOF 
;

// Rule CountField
ruleCountField 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCountFieldAccess().getGroup()); }
		(rule__CountField__Group__0)
		{ after(grammarAccess.getCountFieldAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDataTypeField
entryRuleDataTypeField
:
{ before(grammarAccess.getDataTypeFieldRule()); }
	 ruleDataTypeField
{ after(grammarAccess.getDataTypeFieldRule()); } 
	 EOF 
;

// Rule DataTypeField
ruleDataTypeField 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDataTypeFieldAccess().getGroup()); }
		(rule__DataTypeField__Group__0)
		{ after(grammarAccess.getDataTypeFieldAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFormatter
entryRuleFormatter
:
{ before(grammarAccess.getFormatterRule()); }
	 ruleFormatter
{ after(grammarAccess.getFormatterRule()); } 
	 EOF 
;

// Rule Formatter
ruleFormatter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFormatterAccess().getGroup()); }
		(rule__Formatter__Group__0)
		{ after(grammarAccess.getFormatterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getProtocolKeyword_0_0()); }
		'protocol'
		{ after(grammarAccess.getDataTypeAccess().getProtocolKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getDatatypeKeyword_0_1()); }
		'datatype'
		{ after(grammarAccess.getDataTypeAccess().getDatatypeKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDefinitionAccess().getIntegerFieldParserRuleCall_0()); }
		ruleIntegerField
		{ after(grammarAccess.getVariableDefinitionAccess().getIntegerFieldParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getVariableDefinitionAccess().getStringFieldParserRuleCall_1()); }
		ruleStringField
		{ after(grammarAccess.getVariableDefinitionAccess().getStringFieldParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getVariableDefinitionAccess().getBinaryFieldParserRuleCall_2()); }
		ruleBinaryField
		{ after(grammarAccess.getVariableDefinitionAccess().getBinaryFieldParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getVariableDefinitionAccess().getBitFieldParserRuleCall_3()); }
		ruleBitField
		{ after(grammarAccess.getVariableDefinitionAccess().getBitFieldParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getVariableDefinitionAccess().getListFieldParserRuleCall_4()); }
		ruleListField
		{ after(grammarAccess.getVariableDefinitionAccess().getListFieldParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getVariableDefinitionAccess().getLengthFieldParserRuleCall_5()); }
		ruleLengthField
		{ after(grammarAccess.getVariableDefinitionAccess().getLengthFieldParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getVariableDefinitionAccess().getCountFieldParserRuleCall_6()); }
		ruleCountField
		{ after(grammarAccess.getVariableDefinitionAccess().getCountFieldParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getVariableDefinitionAccess().getDataTypeFieldParserRuleCall_7()); }
		ruleDataTypeField
		{ after(grammarAccess.getVariableDefinitionAccess().getDataTypeFieldParserRuleCall_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringField__Alternatives_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringFieldAccess().getGroup_5_0()); }
		(rule__StringField__Group_5_0__0)
		{ after(grammarAccess.getStringFieldAccess().getGroup_5_0()); }
	)
	|
	(
		{ before(grammarAccess.getStringFieldAccess().getGroup_5_1()); }
		(rule__StringField__Group_5_1__0)
		{ after(grammarAccess.getStringFieldAccess().getGroup_5_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryField__Alternatives_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinaryFieldAccess().getGroup_5_0()); }
		(rule__BinaryField__Group_5_0__0)
		{ after(grammarAccess.getBinaryFieldAccess().getGroup_5_0()); }
	)
	|
	(
		{ before(grammarAccess.getBinaryFieldAccess().getGroup_5_1()); }
		(rule__BinaryField__Group_5_1__0)
		{ after(grammarAccess.getBinaryFieldAccess().getGroup_5_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group__0__Impl
	rule__DataType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getAlternatives_0()); }
	(rule__DataType__Alternatives_0)
	{ after(grammarAccess.getDataTypeAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group__1__Impl
	rule__DataType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getNameAssignment_1()); }
	(rule__DataType__NameAssignment_1)
	{ after(grammarAccess.getDataTypeAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group__2__Impl
	rule__DataType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getDataTypeAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group__3__Impl
	rule__DataType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getDataTypeAccess().getFieldsAssignment_3()); }
		(rule__DataType__FieldsAssignment_3)
		{ after(grammarAccess.getDataTypeAccess().getFieldsAssignment_3()); }
	)
	(
		{ before(grammarAccess.getDataTypeAccess().getFieldsAssignment_3()); }
		(rule__DataType__FieldsAssignment_3)*
		{ after(grammarAccess.getDataTypeAccess().getFieldsAssignment_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getDataTypeAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerField__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntegerField__Group__0__Impl
	rule__IntegerField__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerField__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntegerFieldAccess().getTransientFieldAssignment_0()); }
	(rule__IntegerField__TransientFieldAssignment_0)?
	{ after(grammarAccess.getIntegerFieldAccess().getTransientFieldAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerField__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntegerField__Group__1__Impl
	rule__IntegerField__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerField__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntegerFieldAccess().getIdentityFieldAssignment_1()); }
	(rule__IntegerField__IdentityFieldAssignment_1)?
	{ after(grammarAccess.getIntegerFieldAccess().getIdentityFieldAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerField__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntegerField__Group__2__Impl
	rule__IntegerField__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerField__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntegerFieldAccess().getNameAssignment_2()); }
	(rule__IntegerField__NameAssignment_2)
	{ after(grammarAccess.getIntegerFieldAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerField__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntegerField__Group__3__Impl
	rule__IntegerField__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerField__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntegerFieldAccess().getColonKeyword_3()); }
	':'
	{ after(grammarAccess.getIntegerFieldAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerField__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntegerField__Group__4__Impl
	rule__IntegerField__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerField__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntegerFieldAccess().getIntKeyword_4()); }
	'int'
	{ after(grammarAccess.getIntegerFieldAccess().getIntKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerField__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntegerField__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerField__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntegerFieldAccess().getGroup_5()); }
	(rule__IntegerField__Group_5__0)?
	{ after(grammarAccess.getIntegerFieldAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerField__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntegerField__Group_5__0__Impl
	rule__IntegerField__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerField__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntegerFieldAccess().getLeftParenthesisKeyword_5_0()); }
	'('
	{ after(grammarAccess.getIntegerFieldAccess().getLeftParenthesisKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerField__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntegerField__Group_5__1__Impl
	rule__IntegerField__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerField__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntegerFieldAccess().getByteLenAssignment_5_1()); }
	(rule__IntegerField__ByteLenAssignment_5_1)
	{ after(grammarAccess.getIntegerFieldAccess().getByteLenAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerField__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntegerField__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerField__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntegerFieldAccess().getRightParenthesisKeyword_5_2()); }
	')'
	{ after(grammarAccess.getIntegerFieldAccess().getRightParenthesisKeyword_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StringField__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringField__Group__0__Impl
	rule__StringField__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringField__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringFieldAccess().getTransientFieldAssignment_0()); }
	(rule__StringField__TransientFieldAssignment_0)?
	{ after(grammarAccess.getStringFieldAccess().getTransientFieldAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringField__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringField__Group__1__Impl
	rule__StringField__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StringField__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringFieldAccess().getIdentityFieldAssignment_1()); }
	(rule__StringField__IdentityFieldAssignment_1)?
	{ after(grammarAccess.getStringFieldAccess().getIdentityFieldAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringField__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringField__Group__2__Impl
	rule__StringField__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StringField__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringFieldAccess().getNameAssignment_2()); }
	(rule__StringField__NameAssignment_2)
	{ after(grammarAccess.getStringFieldAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringField__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringField__Group__3__Impl
	rule__StringField__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StringField__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringFieldAccess().getColonKeyword_3()); }
	':'
	{ after(grammarAccess.getStringFieldAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringField__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringField__Group__4__Impl
	rule__StringField__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__StringField__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringFieldAccess().getStringKeyword_4()); }
	'string'
	{ after(grammarAccess.getStringFieldAccess().getStringKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringField__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringField__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringField__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringFieldAccess().getAlternatives_5()); }
	(rule__StringField__Alternatives_5)?
	{ after(grammarAccess.getStringFieldAccess().getAlternatives_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StringField__Group_5_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringField__Group_5_0__0__Impl
	rule__StringField__Group_5_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringField__Group_5_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringFieldAccess().getLeftParenthesisKeyword_5_0_0()); }
	'('
	{ after(grammarAccess.getStringFieldAccess().getLeftParenthesisKeyword_5_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringField__Group_5_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringField__Group_5_0__1__Impl
	rule__StringField__Group_5_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StringField__Group_5_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringFieldAccess().getByteLenAssignment_5_0_1()); }
	(rule__StringField__ByteLenAssignment_5_0_1)
	{ after(grammarAccess.getStringFieldAccess().getByteLenAssignment_5_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringField__Group_5_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringField__Group_5_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringField__Group_5_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringFieldAccess().getRightParenthesisKeyword_5_0_2()); }
	')'
	{ after(grammarAccess.getStringFieldAccess().getRightParenthesisKeyword_5_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StringField__Group_5_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringField__Group_5_1__0__Impl
	rule__StringField__Group_5_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringField__Group_5_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringFieldAccess().getLeftParenthesisKeyword_5_1_0()); }
	'('
	{ after(grammarAccess.getStringFieldAccess().getLeftParenthesisKeyword_5_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringField__Group_5_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringField__Group_5_1__1__Impl
	rule__StringField__Group_5_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StringField__Group_5_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringFieldAccess().getUnboundedAssignment_5_1_1()); }
	(rule__StringField__UnboundedAssignment_5_1_1)?
	{ after(grammarAccess.getStringFieldAccess().getUnboundedAssignment_5_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringField__Group_5_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringField__Group_5_1__2__Impl
	rule__StringField__Group_5_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StringField__Group_5_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringFieldAccess().getRightParenthesisKeyword_5_1_2()); }
	')'
	{ after(grammarAccess.getStringFieldAccess().getRightParenthesisKeyword_5_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringField__Group_5_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringField__Group_5_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringField__Group_5_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringFieldAccess().getFormatterAssignment_5_1_3()); }
	(rule__StringField__FormatterAssignment_5_1_3)
	{ after(grammarAccess.getStringFieldAccess().getFormatterAssignment_5_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryField__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryField__Group__0__Impl
	rule__BinaryField__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryField__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryFieldAccess().getTransientFieldAssignment_0()); }
	(rule__BinaryField__TransientFieldAssignment_0)?
	{ after(grammarAccess.getBinaryFieldAccess().getTransientFieldAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryField__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryField__Group__1__Impl
	rule__BinaryField__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryField__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryFieldAccess().getIdentityFieldAssignment_1()); }
	(rule__BinaryField__IdentityFieldAssignment_1)?
	{ after(grammarAccess.getBinaryFieldAccess().getIdentityFieldAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryField__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryField__Group__2__Impl
	rule__BinaryField__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryField__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryFieldAccess().getNameAssignment_2()); }
	(rule__BinaryField__NameAssignment_2)
	{ after(grammarAccess.getBinaryFieldAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryField__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryField__Group__3__Impl
	rule__BinaryField__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryField__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryFieldAccess().getColonKeyword_3()); }
	':'
	{ after(grammarAccess.getBinaryFieldAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryField__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryField__Group__4__Impl
	rule__BinaryField__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryField__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryFieldAccess().getBinaryKeyword_4()); }
	'binary'
	{ after(grammarAccess.getBinaryFieldAccess().getBinaryKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryField__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryField__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryField__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryFieldAccess().getAlternatives_5()); }
	(rule__BinaryField__Alternatives_5)
	{ after(grammarAccess.getBinaryFieldAccess().getAlternatives_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryField__Group_5_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryField__Group_5_0__0__Impl
	rule__BinaryField__Group_5_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryField__Group_5_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryFieldAccess().getLeftParenthesisKeyword_5_0_0()); }
	'('
	{ after(grammarAccess.getBinaryFieldAccess().getLeftParenthesisKeyword_5_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryField__Group_5_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryField__Group_5_0__1__Impl
	rule__BinaryField__Group_5_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryField__Group_5_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryFieldAccess().getByteLenAssignment_5_0_1()); }
	(rule__BinaryField__ByteLenAssignment_5_0_1)
	{ after(grammarAccess.getBinaryFieldAccess().getByteLenAssignment_5_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryField__Group_5_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryField__Group_5_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryField__Group_5_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryFieldAccess().getRightParenthesisKeyword_5_0_2()); }
	')'
	{ after(grammarAccess.getBinaryFieldAccess().getRightParenthesisKeyword_5_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryField__Group_5_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryField__Group_5_1__0__Impl
	rule__BinaryField__Group_5_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryField__Group_5_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryFieldAccess().getLeftParenthesisKeyword_5_1_0()); }
	'('
	{ after(grammarAccess.getBinaryFieldAccess().getLeftParenthesisKeyword_5_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryField__Group_5_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryField__Group_5_1__1__Impl
	rule__BinaryField__Group_5_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryField__Group_5_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryFieldAccess().getUnboundedAssignment_5_1_1()); }
	(rule__BinaryField__UnboundedAssignment_5_1_1)?
	{ after(grammarAccess.getBinaryFieldAccess().getUnboundedAssignment_5_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryField__Group_5_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryField__Group_5_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryField__Group_5_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryFieldAccess().getRightParenthesisKeyword_5_1_2()); }
	')'
	{ after(grammarAccess.getBinaryFieldAccess().getRightParenthesisKeyword_5_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BitField__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BitField__Group__0__Impl
	rule__BitField__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitField__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBitFieldAccess().getTransientFieldAssignment_0()); }
	(rule__BitField__TransientFieldAssignment_0)?
	{ after(grammarAccess.getBitFieldAccess().getTransientFieldAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BitField__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BitField__Group__1__Impl
	rule__BitField__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BitField__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBitFieldAccess().getIdentityFieldAssignment_1()); }
	(rule__BitField__IdentityFieldAssignment_1)?
	{ after(grammarAccess.getBitFieldAccess().getIdentityFieldAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BitField__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BitField__Group__2__Impl
	rule__BitField__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BitField__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBitFieldAccess().getNameAssignment_2()); }
	(rule__BitField__NameAssignment_2)
	{ after(grammarAccess.getBitFieldAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BitField__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BitField__Group__3__Impl
	rule__BitField__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BitField__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBitFieldAccess().getColonKeyword_3()); }
	':'
	{ after(grammarAccess.getBitFieldAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BitField__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BitField__Group__4__Impl
	rule__BitField__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__BitField__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBitFieldAccess().getBitfieldKeyword_4()); }
	'bitfield'
	{ after(grammarAccess.getBitFieldAccess().getBitfieldKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BitField__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BitField__Group__5__Impl
	rule__BitField__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__BitField__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBitFieldAccess().getLeftCurlyBracketKeyword_5()); }
	'{'
	{ after(grammarAccess.getBitFieldAccess().getLeftCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BitField__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BitField__Group__6__Impl
	rule__BitField__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__BitField__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getBitFieldAccess().getComponentsAssignment_6()); }
		(rule__BitField__ComponentsAssignment_6)
		{ after(grammarAccess.getBitFieldAccess().getComponentsAssignment_6()); }
	)
	(
		{ before(grammarAccess.getBitFieldAccess().getComponentsAssignment_6()); }
		(rule__BitField__ComponentsAssignment_6)*
		{ after(grammarAccess.getBitFieldAccess().getComponentsAssignment_6()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BitField__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BitField__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitField__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBitFieldAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getBitFieldAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BitfieldComponent__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BitfieldComponent__Group__0__Impl
	rule__BitfieldComponent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitfieldComponent__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBitfieldComponentAccess().getNameAssignment_0()); }
	(rule__BitfieldComponent__NameAssignment_0)
	{ after(grammarAccess.getBitfieldComponentAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BitfieldComponent__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BitfieldComponent__Group__1__Impl
	rule__BitfieldComponent__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BitfieldComponent__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBitfieldComponentAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getBitfieldComponentAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BitfieldComponent__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BitfieldComponent__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitfieldComponent__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBitfieldComponentAccess().getBitLenAssignment_2()); }
	(rule__BitfieldComponent__BitLenAssignment_2)
	{ after(grammarAccess.getBitfieldComponentAccess().getBitLenAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ListField__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListField__Group__0__Impl
	rule__ListField__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListField__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListFieldAccess().getTransientFieldAssignment_0()); }
	(rule__ListField__TransientFieldAssignment_0)?
	{ after(grammarAccess.getListFieldAccess().getTransientFieldAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListField__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListField__Group__1__Impl
	rule__ListField__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ListField__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListFieldAccess().getIdentityFieldAssignment_1()); }
	(rule__ListField__IdentityFieldAssignment_1)?
	{ after(grammarAccess.getListFieldAccess().getIdentityFieldAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListField__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListField__Group__2__Impl
	rule__ListField__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ListField__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListFieldAccess().getNameAssignment_2()); }
	(rule__ListField__NameAssignment_2)
	{ after(grammarAccess.getListFieldAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListField__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListField__Group__3__Impl
	rule__ListField__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ListField__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListFieldAccess().getColonKeyword_3()); }
	':'
	{ after(grammarAccess.getListFieldAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListField__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListField__Group__4__Impl
	rule__ListField__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ListField__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListFieldAccess().getListKeyword_4()); }
	'list'
	{ after(grammarAccess.getListFieldAccess().getListKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListField__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListField__Group__5__Impl
	rule__ListField__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ListField__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListFieldAccess().getLeftParenthesisKeyword_5()); }
	'('
	{ after(grammarAccess.getListFieldAccess().getLeftParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListField__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListField__Group__6__Impl
	rule__ListField__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ListField__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListFieldAccess().getElementTypeAssignment_6()); }
	(rule__ListField__ElementTypeAssignment_6)
	{ after(grammarAccess.getListFieldAccess().getElementTypeAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListField__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListField__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListField__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListFieldAccess().getRightParenthesisKeyword_7()); }
	')'
	{ after(grammarAccess.getListFieldAccess().getRightParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LengthField__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LengthField__Group__0__Impl
	rule__LengthField__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LengthField__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLengthFieldAccess().getTransientFieldAssignment_0()); }
	(rule__LengthField__TransientFieldAssignment_0)?
	{ after(grammarAccess.getLengthFieldAccess().getTransientFieldAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LengthField__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LengthField__Group__1__Impl
	rule__LengthField__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LengthField__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLengthFieldAccess().getIdentityFieldAssignment_1()); }
	(rule__LengthField__IdentityFieldAssignment_1)?
	{ after(grammarAccess.getLengthFieldAccess().getIdentityFieldAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LengthField__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LengthField__Group__2__Impl
	rule__LengthField__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LengthField__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLengthFieldAccess().getNameAssignment_2()); }
	(rule__LengthField__NameAssignment_2)
	{ after(grammarAccess.getLengthFieldAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LengthField__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LengthField__Group__3__Impl
	rule__LengthField__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LengthField__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLengthFieldAccess().getColonKeyword_3()); }
	':'
	{ after(grammarAccess.getLengthFieldAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LengthField__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LengthField__Group__4__Impl
	rule__LengthField__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__LengthField__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLengthFieldAccess().getLengthKeyword_4()); }
	'length'
	{ after(grammarAccess.getLengthFieldAccess().getLengthKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LengthField__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LengthField__Group__5__Impl
	rule__LengthField__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__LengthField__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLengthFieldAccess().getLeftParenthesisKeyword_5()); }
	'('
	{ after(grammarAccess.getLengthFieldAccess().getLeftParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LengthField__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LengthField__Group__6__Impl
	rule__LengthField__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__LengthField__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLengthFieldAccess().getByteLenAssignment_6()); }
	(rule__LengthField__ByteLenAssignment_6)
	{ after(grammarAccess.getLengthFieldAccess().getByteLenAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LengthField__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LengthField__Group__7__Impl
	rule__LengthField__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__LengthField__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLengthFieldAccess().getCommaKeyword_7()); }
	','
	{ after(grammarAccess.getLengthFieldAccess().getCommaKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LengthField__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LengthField__Group__8__Impl
	rule__LengthField__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__LengthField__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLengthFieldAccess().getRefAssignment_8()); }
	(rule__LengthField__RefAssignment_8)
	{ after(grammarAccess.getLengthFieldAccess().getRefAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LengthField__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LengthField__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LengthField__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLengthFieldAccess().getRightParenthesisKeyword_9()); }
	')'
	{ after(grammarAccess.getLengthFieldAccess().getRightParenthesisKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CountField__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CountField__Group__0__Impl
	rule__CountField__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CountField__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCountFieldAccess().getTransientFieldAssignment_0()); }
	(rule__CountField__TransientFieldAssignment_0)?
	{ after(grammarAccess.getCountFieldAccess().getTransientFieldAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CountField__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CountField__Group__1__Impl
	rule__CountField__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CountField__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCountFieldAccess().getIdentityFieldAssignment_1()); }
	(rule__CountField__IdentityFieldAssignment_1)?
	{ after(grammarAccess.getCountFieldAccess().getIdentityFieldAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CountField__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CountField__Group__2__Impl
	rule__CountField__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CountField__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCountFieldAccess().getNameAssignment_2()); }
	(rule__CountField__NameAssignment_2)
	{ after(grammarAccess.getCountFieldAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CountField__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CountField__Group__3__Impl
	rule__CountField__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CountField__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCountFieldAccess().getColonKeyword_3()); }
	':'
	{ after(grammarAccess.getCountFieldAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CountField__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CountField__Group__4__Impl
	rule__CountField__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CountField__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCountFieldAccess().getCountKeyword_4()); }
	'count'
	{ after(grammarAccess.getCountFieldAccess().getCountKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CountField__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CountField__Group__5__Impl
	rule__CountField__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__CountField__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCountFieldAccess().getLeftParenthesisKeyword_5()); }
	'('
	{ after(grammarAccess.getCountFieldAccess().getLeftParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CountField__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CountField__Group__6__Impl
	rule__CountField__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__CountField__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCountFieldAccess().getByteLenAssignment_6()); }
	(rule__CountField__ByteLenAssignment_6)
	{ after(grammarAccess.getCountFieldAccess().getByteLenAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CountField__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CountField__Group__7__Impl
	rule__CountField__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__CountField__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCountFieldAccess().getCommaKeyword_7()); }
	','
	{ after(grammarAccess.getCountFieldAccess().getCommaKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CountField__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CountField__Group__8__Impl
	rule__CountField__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__CountField__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCountFieldAccess().getRefAssignment_8()); }
	(rule__CountField__RefAssignment_8)
	{ after(grammarAccess.getCountFieldAccess().getRefAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CountField__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CountField__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CountField__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCountFieldAccess().getRightParenthesisKeyword_9()); }
	')'
	{ after(grammarAccess.getCountFieldAccess().getRightParenthesisKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataTypeField__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataTypeField__Group__0__Impl
	rule__DataTypeField__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeField__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeFieldAccess().getTransientFieldAssignment_0()); }
	(rule__DataTypeField__TransientFieldAssignment_0)?
	{ after(grammarAccess.getDataTypeFieldAccess().getTransientFieldAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeField__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataTypeField__Group__1__Impl
	rule__DataTypeField__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeField__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeFieldAccess().getIdentityFieldAssignment_1()); }
	(rule__DataTypeField__IdentityFieldAssignment_1)?
	{ after(grammarAccess.getDataTypeFieldAccess().getIdentityFieldAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeField__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataTypeField__Group__2__Impl
	rule__DataTypeField__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeField__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeFieldAccess().getNameAssignment_2()); }
	(rule__DataTypeField__NameAssignment_2)
	{ after(grammarAccess.getDataTypeFieldAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeField__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataTypeField__Group__3__Impl
	rule__DataTypeField__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeField__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeFieldAccess().getColonKeyword_3()); }
	':'
	{ after(grammarAccess.getDataTypeFieldAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeField__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataTypeField__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeField__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeFieldAccess().getDatatypeAssignment_4()); }
	(rule__DataTypeField__DatatypeAssignment_4)
	{ after(grammarAccess.getDataTypeFieldAccess().getDatatypeAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Formatter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Formatter__Group__0__Impl
	rule__Formatter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Formatter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormatterAccess().getFormatterKeyword_0()); }
	'formatter'
	{ after(grammarAccess.getFormatterAccess().getFormatterKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Formatter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Formatter__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Formatter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormatterAccess().getNameAssignment_1()); }
	(rule__Formatter__NameAssignment_1)
	{ after(grammarAccess.getFormatterAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProtocolModel__DatatypesAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProtocolModelAccess().getDatatypesDataTypeParserRuleCall_0()); }
		ruleDataType
		{ after(grammarAccess.getProtocolModelAccess().getDatatypesDataTypeParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getDataTypeAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__FieldsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getFieldsVariableDefinitionParserRuleCall_3_0()); }
		ruleVariableDefinition
		{ after(grammarAccess.getDataTypeAccess().getFieldsVariableDefinitionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerField__TransientFieldAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntegerFieldAccess().getTransientFieldTransientKeyword_0_0()); }
		(
			{ before(grammarAccess.getIntegerFieldAccess().getTransientFieldTransientKeyword_0_0()); }
			'transient'
			{ after(grammarAccess.getIntegerFieldAccess().getTransientFieldTransientKeyword_0_0()); }
		)
		{ after(grammarAccess.getIntegerFieldAccess().getTransientFieldTransientKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerField__IdentityFieldAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntegerFieldAccess().getIdentityFieldAsteriskKeyword_1_0()); }
		(
			{ before(grammarAccess.getIntegerFieldAccess().getIdentityFieldAsteriskKeyword_1_0()); }
			'*'
			{ after(grammarAccess.getIntegerFieldAccess().getIdentityFieldAsteriskKeyword_1_0()); }
		)
		{ after(grammarAccess.getIntegerFieldAccess().getIdentityFieldAsteriskKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerField__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntegerFieldAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getIntegerFieldAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerField__ByteLenAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntegerFieldAccess().getByteLenINTTerminalRuleCall_5_1_0()); }
		RULE_INT
		{ after(grammarAccess.getIntegerFieldAccess().getByteLenINTTerminalRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringField__TransientFieldAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringFieldAccess().getTransientFieldTransientKeyword_0_0()); }
		(
			{ before(grammarAccess.getStringFieldAccess().getTransientFieldTransientKeyword_0_0()); }
			'transient'
			{ after(grammarAccess.getStringFieldAccess().getTransientFieldTransientKeyword_0_0()); }
		)
		{ after(grammarAccess.getStringFieldAccess().getTransientFieldTransientKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringField__IdentityFieldAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringFieldAccess().getIdentityFieldAsteriskKeyword_1_0()); }
		(
			{ before(grammarAccess.getStringFieldAccess().getIdentityFieldAsteriskKeyword_1_0()); }
			'*'
			{ after(grammarAccess.getStringFieldAccess().getIdentityFieldAsteriskKeyword_1_0()); }
		)
		{ after(grammarAccess.getStringFieldAccess().getIdentityFieldAsteriskKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringField__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringFieldAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getStringFieldAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringField__ByteLenAssignment_5_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringFieldAccess().getByteLenINTTerminalRuleCall_5_0_1_0()); }
		RULE_INT
		{ after(grammarAccess.getStringFieldAccess().getByteLenINTTerminalRuleCall_5_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringField__UnboundedAssignment_5_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringFieldAccess().getUnboundedAsteriskKeyword_5_1_1_0()); }
		(
			{ before(grammarAccess.getStringFieldAccess().getUnboundedAsteriskKeyword_5_1_1_0()); }
			'*'
			{ after(grammarAccess.getStringFieldAccess().getUnboundedAsteriskKeyword_5_1_1_0()); }
		)
		{ after(grammarAccess.getStringFieldAccess().getUnboundedAsteriskKeyword_5_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringField__FormatterAssignment_5_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringFieldAccess().getFormatterFormatterParserRuleCall_5_1_3_0()); }
		ruleFormatter
		{ after(grammarAccess.getStringFieldAccess().getFormatterFormatterParserRuleCall_5_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryField__TransientFieldAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinaryFieldAccess().getTransientFieldTransientKeyword_0_0()); }
		(
			{ before(grammarAccess.getBinaryFieldAccess().getTransientFieldTransientKeyword_0_0()); }
			'transient'
			{ after(grammarAccess.getBinaryFieldAccess().getTransientFieldTransientKeyword_0_0()); }
		)
		{ after(grammarAccess.getBinaryFieldAccess().getTransientFieldTransientKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryField__IdentityFieldAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinaryFieldAccess().getIdentityFieldAsteriskKeyword_1_0()); }
		(
			{ before(grammarAccess.getBinaryFieldAccess().getIdentityFieldAsteriskKeyword_1_0()); }
			'*'
			{ after(grammarAccess.getBinaryFieldAccess().getIdentityFieldAsteriskKeyword_1_0()); }
		)
		{ after(grammarAccess.getBinaryFieldAccess().getIdentityFieldAsteriskKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryField__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinaryFieldAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getBinaryFieldAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryField__ByteLenAssignment_5_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinaryFieldAccess().getByteLenINTTerminalRuleCall_5_0_1_0()); }
		RULE_INT
		{ after(grammarAccess.getBinaryFieldAccess().getByteLenINTTerminalRuleCall_5_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryField__UnboundedAssignment_5_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinaryFieldAccess().getUnboundedAsteriskKeyword_5_1_1_0()); }
		(
			{ before(grammarAccess.getBinaryFieldAccess().getUnboundedAsteriskKeyword_5_1_1_0()); }
			'*'
			{ after(grammarAccess.getBinaryFieldAccess().getUnboundedAsteriskKeyword_5_1_1_0()); }
		)
		{ after(grammarAccess.getBinaryFieldAccess().getUnboundedAsteriskKeyword_5_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BitField__TransientFieldAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBitFieldAccess().getTransientFieldTransientKeyword_0_0()); }
		(
			{ before(grammarAccess.getBitFieldAccess().getTransientFieldTransientKeyword_0_0()); }
			'transient'
			{ after(grammarAccess.getBitFieldAccess().getTransientFieldTransientKeyword_0_0()); }
		)
		{ after(grammarAccess.getBitFieldAccess().getTransientFieldTransientKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BitField__IdentityFieldAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBitFieldAccess().getIdentityFieldAsteriskKeyword_1_0()); }
		(
			{ before(grammarAccess.getBitFieldAccess().getIdentityFieldAsteriskKeyword_1_0()); }
			'*'
			{ after(grammarAccess.getBitFieldAccess().getIdentityFieldAsteriskKeyword_1_0()); }
		)
		{ after(grammarAccess.getBitFieldAccess().getIdentityFieldAsteriskKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BitField__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBitFieldAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getBitFieldAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BitField__ComponentsAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBitFieldAccess().getComponentsBitfieldComponentParserRuleCall_6_0()); }
		ruleBitfieldComponent
		{ after(grammarAccess.getBitFieldAccess().getComponentsBitfieldComponentParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BitfieldComponent__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBitfieldComponentAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getBitfieldComponentAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BitfieldComponent__BitLenAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBitfieldComponentAccess().getBitLenINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getBitfieldComponentAccess().getBitLenINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListField__TransientFieldAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListFieldAccess().getTransientFieldTransientKeyword_0_0()); }
		(
			{ before(grammarAccess.getListFieldAccess().getTransientFieldTransientKeyword_0_0()); }
			'transient'
			{ after(grammarAccess.getListFieldAccess().getTransientFieldTransientKeyword_0_0()); }
		)
		{ after(grammarAccess.getListFieldAccess().getTransientFieldTransientKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListField__IdentityFieldAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListFieldAccess().getIdentityFieldAsteriskKeyword_1_0()); }
		(
			{ before(grammarAccess.getListFieldAccess().getIdentityFieldAsteriskKeyword_1_0()); }
			'*'
			{ after(grammarAccess.getListFieldAccess().getIdentityFieldAsteriskKeyword_1_0()); }
		)
		{ after(grammarAccess.getListFieldAccess().getIdentityFieldAsteriskKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListField__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListFieldAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getListFieldAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListField__ElementTypeAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListFieldAccess().getElementTypeDataTypeCrossReference_6_0()); }
		(
			{ before(grammarAccess.getListFieldAccess().getElementTypeDataTypeIDTerminalRuleCall_6_0_1()); }
			RULE_ID
			{ after(grammarAccess.getListFieldAccess().getElementTypeDataTypeIDTerminalRuleCall_6_0_1()); }
		)
		{ after(grammarAccess.getListFieldAccess().getElementTypeDataTypeCrossReference_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LengthField__TransientFieldAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLengthFieldAccess().getTransientFieldTransientKeyword_0_0()); }
		(
			{ before(grammarAccess.getLengthFieldAccess().getTransientFieldTransientKeyword_0_0()); }
			'transient'
			{ after(grammarAccess.getLengthFieldAccess().getTransientFieldTransientKeyword_0_0()); }
		)
		{ after(grammarAccess.getLengthFieldAccess().getTransientFieldTransientKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LengthField__IdentityFieldAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLengthFieldAccess().getIdentityFieldAsteriskKeyword_1_0()); }
		(
			{ before(grammarAccess.getLengthFieldAccess().getIdentityFieldAsteriskKeyword_1_0()); }
			'*'
			{ after(grammarAccess.getLengthFieldAccess().getIdentityFieldAsteriskKeyword_1_0()); }
		)
		{ after(grammarAccess.getLengthFieldAccess().getIdentityFieldAsteriskKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LengthField__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLengthFieldAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getLengthFieldAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LengthField__ByteLenAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLengthFieldAccess().getByteLenINTTerminalRuleCall_6_0()); }
		RULE_INT
		{ after(grammarAccess.getLengthFieldAccess().getByteLenINTTerminalRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LengthField__RefAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLengthFieldAccess().getRefBinaryFieldCrossReference_8_0()); }
		(
			{ before(grammarAccess.getLengthFieldAccess().getRefBinaryFieldIDTerminalRuleCall_8_0_1()); }
			RULE_ID
			{ after(grammarAccess.getLengthFieldAccess().getRefBinaryFieldIDTerminalRuleCall_8_0_1()); }
		)
		{ after(grammarAccess.getLengthFieldAccess().getRefBinaryFieldCrossReference_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CountField__TransientFieldAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCountFieldAccess().getTransientFieldTransientKeyword_0_0()); }
		(
			{ before(grammarAccess.getCountFieldAccess().getTransientFieldTransientKeyword_0_0()); }
			'transient'
			{ after(grammarAccess.getCountFieldAccess().getTransientFieldTransientKeyword_0_0()); }
		)
		{ after(grammarAccess.getCountFieldAccess().getTransientFieldTransientKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CountField__IdentityFieldAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCountFieldAccess().getIdentityFieldAsteriskKeyword_1_0()); }
		(
			{ before(grammarAccess.getCountFieldAccess().getIdentityFieldAsteriskKeyword_1_0()); }
			'*'
			{ after(grammarAccess.getCountFieldAccess().getIdentityFieldAsteriskKeyword_1_0()); }
		)
		{ after(grammarAccess.getCountFieldAccess().getIdentityFieldAsteriskKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CountField__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCountFieldAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getCountFieldAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CountField__ByteLenAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCountFieldAccess().getByteLenINTTerminalRuleCall_6_0()); }
		RULE_INT
		{ after(grammarAccess.getCountFieldAccess().getByteLenINTTerminalRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CountField__RefAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCountFieldAccess().getRefListFieldCrossReference_8_0()); }
		(
			{ before(grammarAccess.getCountFieldAccess().getRefListFieldIDTerminalRuleCall_8_0_1()); }
			RULE_ID
			{ after(grammarAccess.getCountFieldAccess().getRefListFieldIDTerminalRuleCall_8_0_1()); }
		)
		{ after(grammarAccess.getCountFieldAccess().getRefListFieldCrossReference_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeField__TransientFieldAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeFieldAccess().getTransientFieldTransientKeyword_0_0()); }
		(
			{ before(grammarAccess.getDataTypeFieldAccess().getTransientFieldTransientKeyword_0_0()); }
			'transient'
			{ after(grammarAccess.getDataTypeFieldAccess().getTransientFieldTransientKeyword_0_0()); }
		)
		{ after(grammarAccess.getDataTypeFieldAccess().getTransientFieldTransientKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeField__IdentityFieldAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeFieldAccess().getIdentityFieldAsteriskKeyword_1_0()); }
		(
			{ before(grammarAccess.getDataTypeFieldAccess().getIdentityFieldAsteriskKeyword_1_0()); }
			'*'
			{ after(grammarAccess.getDataTypeFieldAccess().getIdentityFieldAsteriskKeyword_1_0()); }
		)
		{ after(grammarAccess.getDataTypeFieldAccess().getIdentityFieldAsteriskKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeField__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeFieldAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getDataTypeFieldAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeField__DatatypeAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeFieldAccess().getDatatypeDataTypeCrossReference_4_0()); }
		(
			{ before(grammarAccess.getDataTypeFieldAccess().getDatatypeDataTypeIDTerminalRuleCall_4_0_1()); }
			RULE_ID
			{ after(grammarAccess.getDataTypeFieldAccess().getDatatypeDataTypeIDTerminalRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getDataTypeFieldAccess().getDatatypeDataTypeCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Formatter__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormatterAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getFormatterAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
